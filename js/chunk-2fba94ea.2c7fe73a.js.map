{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_wks-ext.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/_wks-define.js","webpack:///./node_modules/toformat/toFormat.js","webpack:///./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js","webpack:///./src/internalConstants.ts","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/modules/_meta.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/utils/mostSignificantBit.ts","webpack:///./src/utils/tickMath.ts","webpack:///./node_modules/core-js/modules/_object-gopn-ext.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/decimal.js-light/decimal.js","webpack:///./node_modules/core-js/modules/es6.symbol.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/@uniswap/sdk-core/node_modules/big.js/big.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/core-js/modules/_enum-keys.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/jsbi/dist/jsbi-umd.js"],"names":["toInteger","defined","module","exports","TO_STRING","that","pos","a","b","s","String","i","l","length","undefined","charCodeAt","charAt","slice","anObject","this","result","global","ignoreCase","multiline","unicode","sticky","cof","Array","isArray","arg","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","from","arrayLike","step","iterator","O","C","aLen","arguments","mapfn","mapping","index","iterFn","next","done","value","f","flags","RegExp","prototype","configurable","get","core","LIBRARY","wksExt","defineProperty","name","$Symbol","Symbol","toFormat","Ctor","dp","rm","fmt","e","toString","arr","g1","g2","u","nd","intd","intp","fracp","dsep","gsep","gsize","sgsize","fgsep","fgsize","tfmt","format","cfmt","constructor","toFixed","split","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","substr","fractionGroupSeparator","fractionGroupSize","replace","TradeType","Rounding","_toSignificantRoundin","_toFixedRounding","MaxUint256","BigInt","_defineProperties","target","props","descriptor","enumerable","writable","Object","key","_createClass","Constructor","protoProps","staticProps","_inheritsLoose","subClass","superClass","create","__proto__","Decimal","Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","_proto","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","rounding","Number","isInteger","set","precision","quotient","div","toSignificantDigits","decimalPlaces","DP","RM","remainder","Big$1","CurrencyAmount","_Fraction","currency","_this","lessThanOrEqual","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","toExact","isToken","wrapped","Price","baseCurrency","quoteCurrency","_len","args","_key","quoteAmount","baseAmount","_ref","scalar","fraction","quote","currencyAmount","adjustedForDecimals","BaseCurrency","chainId","symbol","isSafeInteger","NativeCurrency","_BaseCurrency","apply","isNative","validateAndParseAddress","address","error","_WETH","Token","sortsBefore","toLowerCase","WETH9","Ether","_NativeCurrency","onChain","_this$_etherCache$cha","_etherCache","weth9","MAX_SAFE_INTEGER","ZERO","ONE","TWO","sqrt","greaterThanOrEqual","Math","floor","toNumber","z","x","Q96","Q192","$at","iterated","_t","_i","point","META","isObject","has","setDesc","id","isExtensible","FREEZE","preventExtensions","setMeta","it","w","fastKey","getWeak","onFreeze","meta","NEED","KEY","$flags","DESCRIPTORS","$toString","define","fn","source","R","concat","_arrayWithHoles","_iterableToArrayLimit","_s","_e","_arr","_n","_d","push","err","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","test","_nonIterableRest","TypeError","_slicedToArray","POWERS_OF_2","map","pow","mostSignificantBit","msb","power","min","signedRightShift","mulShift","val","mulBy","Q32","tick","TickMath","MIN_TICK","MAX_TICK","absTick","ratio","sqrtRatioX96","MIN_SQRT_RATIO","MAX_SQRT_RATIO","r","sqrtRatioX128","leftShift","log_2","bitwiseOr","log_sqrt10001","tickLow","tickHigh","getSqrtRatioAtTick","toIObject","gOPN","windowNames","window","getOwnPropertyNames","getWindowNames","globalScope","MAX_DIGITS","toExpNeg","toExpPos","LN10","external","decimalError","invalidArgument","exponentOutOfRange","mathfloor","mathpow","isDecimal","BASE","LOG_BASE","MAX_E","P","y","carry","d","k","xd","yd","pr","round","ceil","reverse","unshift","pop","checkInt32","max","digitsToString","ws","indexOfLastWord","str","getZeroString","absoluteValue","abs","comparedTo","cmp","j","xdL","ydL","dividedBy","dividedToIntegerBy","idiv","eq","exponent","getBase10Exponent","gt","greaterThanOrEqualTo","gte","isint","isNegative","isneg","isPositive","ispos","isZero","lt","lessThanOrEqualTo","lte","logarithm","log","base","wpr","ln","minus","sub","modulo","mod","q","times","naturalExponential","exp","naturalLogarithm","negated","neg","plus","sd","squareRoot","t","toExponential","indexOf","mul","rL","shift","toDecimalPlaces","todp","toint","toPower","sign","yIsInt","guard","yn","truncate","toPrecision","tosd","valueOf","toJSON","multiplyInteger","temp","compare","aL","bL","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sum","getLn10","zs","c","c0","x2","parseDecimal","search","substring","rd","doRound","xdi","xe","xLTy","isExp","clone","obj","p","ps","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","config","hasOwnProperty","v","redefine","$fails","shared","setToStringTag","uid","wks","wksDefine","enumKeys","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$GOPS","$DP","$keys","gOPD","dP","$JSON","JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","D","protoDesc","wrap","tag","sym","_k","isSymbol","$defineProperty","$defineProperties","keys","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","$getOwnPropertySymbols","IS_OP","$set","G","W","es6Symbols","wellKnownSymbols","store","keyFor","useSetter","useSimple","defineProperties","getOwnPropertyDescriptor","getOwnPropertySymbols","FAILS_ON_PRIMITIVES","replacer","$replacer","isFinite","GLOBAL","MAX_DP","MAX_POWER","NE","PE","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","UNDEFINED","NUMERIC","_Big_","parse","version","nl","more","xc","join","yc","bl","bt","ri","bz","ai","al","rl","qc","qi","xlty","ye","ygtx","one","half","getKeys","gOPS","pIE","getSymbols","symbols","_classCallCheck","instance","object","isProduction","prefix","invariant","condition","message","_","clz32","g","super","__kMaxLength","RangeError","__zero","__isOneDigitInt","__oneDigit","__fromDouble","__fromString","SyntaxError","__toPrimitive","__toStringBasePowerOfTwo","__toStringGeneric","__unsignedDigit","__digit","__clz30","Infinity","h","m","__decideRounding","__kBitConversionInts","__kBitConversionDouble","__copy","__absoluteSubOne","__trim","__absoluteAddOne","unaryMinus","__kMaxLengthBits","__initializeDigits","__setDigit","__clzmsd","__multiplyAccumulate","__absoluteCompare","__absoluteDivSmall","__absoluteDivLarge","__absoluteModSmall","__absoluteAdd","__absoluteSub","__rightShiftByAbsolute","__leftShiftByAbsolute","__compareToBigInt","__absoluteAnd","__absoluteOr","__absoluteAndNot","__absoluteXor","__truncateToNBits","__truncateAndSubFromPowerOfTwo","__toNumeric","__isBigInt","__compare","EQ","__equalToNumber","__isWhitespace","__kMaxBitsPerChar","__kBitsPerCharTableMultiplier","__kBitsPerCharTableShift","__fillFromParts","__inplaceMultiplyAdd","__kConversionChars","__halfDigit","__setHalfDigit","__unequalSign","__absoluteGreater","__absoluteLess","__compareToDouble","__comparisonResultToBool","__compareToNumber","__setDigitGrow","__imul","__halfDigitLength","__clz15","__specialLeftShift","__internalMultiplyAdd","__inplaceSub","__inplaceAdd","__inplaceRightShift","__toShiftAmount","__rightShiftByMaximum","__kBitConversionBuffer","ArrayBuffer","Float64Array","Int32Array","LN2","imul","default"],"mappings":"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","file":"js/chunk-2fba94ea.2c7fe73a.js","sourcesContent":["var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","exports.f = require('./_wks');\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","/*\r\n *  toFormat v2.0.0\r\n *  Adds a toFormat instance method to big.js or decimal.js\r\n *  Copyright (c) 2017 Michael Mclaughlin\r\n *  MIT Licence\r\n */\r\n\r\n /*\r\n * Adds a `toFormat` method to `Ctor.prototype` and a `format` object to `Ctor`, where `Ctor` is\r\n * a big number constructor such as `Decimal` (decimal.js) or `Big` (big.js).\r\n */\r\nfunction toFormat(Ctor) {\r\n  'use strict';\r\n\r\n  /*\r\n   *  Returns a string representing the value of this big number in fixed-point notation to `dp`\r\n   *  decimal places using rounding mode `rm`, and formatted according to the properties of the\r\n   * `fmt`, `this.format` and `this.constructor.format` objects, in that order of precedence.\r\n   *\r\n   *  Example:\r\n   *\r\n   *  x = new Decimal('123456789.987654321')\r\n   *\r\n   *  // Add a format object to the constructor...\r\n   *  Decimal.format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ',',\r\n   *    groupSize: 3,\r\n   *    secondaryGroupSize: 0,\r\n   *    fractionGroupSeparator: '',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 0\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123,456,789.987654321\r\n   *  x.toFormat(2, 1);            // 123,456,789.98\r\n   *\r\n   *  // And/or add a format object to the big number itself...\r\n   *  x.format = {\r\n   *    decimalSeparator: ',',\r\n   *    groupSeparator: '',\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123456789,987654321\r\n   *\r\n   *  format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ' ',\r\n   *    groupSize: 3,\r\n   *    fractionGroupSeparator: ' ',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 5\r\n   *  }\r\n\r\n   *  // And/or pass a format object to the method call.\r\n   *  x.toFormat(format);          // 123 456 789.98765 4321\r\n   *  x.toFormat(4, format);       // 123 456 789.9877\r\n   *  x.toFormat(2, 1, format);    // 123 456 789.98\r\n   *\r\n   *  [dp] {number} Decimal places. Integer.\r\n   *  [rm] {number} Rounding mode. Integer, 0 to 8. (Ignored if using big.js.)\r\n   *  [fmt] {Object} A format object.\r\n   *\r\n   */\r\n  Ctor.prototype.toFormat = function toFormat(dp, rm, fmt) {\r\n\r\n    if (!this.e && this.e !== 0) return this.toString();   // Infinity/NaN\r\n\r\n    var arr, g1, g2, i,\r\n      u,                             // undefined\r\n      nd,                            // number of integer digits\r\n      intd,                          // integer digits\r\n      intp,                          // integer part\r\n      fracp,                         // fraction part\r\n      dsep,                          // decimalSeparator\r\n      gsep,                          // groupSeparator\r\n      gsize,                         // groupSize\r\n      sgsize,                        // secondaryGroupSize\r\n      fgsep,                         // fractionGroupSeparator\r\n      fgsize,                        // fractionGroupSize\r\n      tfmt = this.format || {},\r\n      cfmt = this.constructor.format || {};\r\n\r\n    if (dp != u) {\r\n      if (typeof dp == 'object') {\r\n        fmt = dp;\r\n        dp = u;\r\n      } else if (rm != u) {\r\n        if (typeof rm == 'object') {\r\n          fmt = rm;\r\n          rm = u;\r\n        } else if (typeof fmt != 'object') {\r\n          fmt = {};\r\n        }\r\n      } else {\r\n        fmt = {};\r\n      }\r\n    } else {\r\n      fmt = {};\r\n    }\r\n\r\n    arr = this.toFixed(dp, rm).split('.');\r\n    intp = arr[0];\r\n    fracp = arr[1];\r\n    intd = this.s < 0 ? intp.slice(1) : intp;\r\n    nd = intd.length;\r\n\r\n    dsep = fmt.decimalSeparator;\r\n    if (dsep == u) {\r\n      dsep = tfmt.decimalSeparator;\r\n      if (dsep == u) {\r\n        dsep = cfmt.decimalSeparator;\r\n        if (dsep == u) dsep = '.';\r\n      }\r\n    }\r\n\r\n    gsep = fmt.groupSeparator;\r\n    if (gsep == u) {\r\n      gsep = tfmt.groupSeparator;\r\n      if (gsep == u) gsep = cfmt.groupSeparator;\r\n    }\r\n\r\n    if (gsep) {\r\n      gsize = fmt.groupSize;\r\n      if (gsize == u) {\r\n        gsize = tfmt.groupSize;\r\n        if (gsize == u) {\r\n          gsize = cfmt.groupSize;\r\n          if (gsize == u) gsize = 0;\r\n        }\r\n      }\r\n\r\n      sgsize = fmt.secondaryGroupSize;\r\n      if (sgsize == u) {\r\n        sgsize = tfmt.secondaryGroupSize;\r\n        if (sgsize == u) {\r\n          sgsize = cfmt.secondaryGroupSize;\r\n          if (sgsize == u) sgsize = 0;\r\n        }\r\n      }\r\n\r\n      if (sgsize) {\r\n        g1 = +sgsize;\r\n        g2 = +gsize;\r\n        nd -= g2;\r\n      } else {\r\n        g1 = +gsize;\r\n        g2 = +sgsize;\r\n      }\r\n\r\n      if (g1 > 0 && nd > 0) {\r\n        i = nd % g1 || g1;\r\n        intp = intd.substr(0, i);\r\n        for (; i < nd; i += g1) intp += gsep + intd.substr(i, g1);\r\n        if (g2 > 0) intp += gsep + intd.slice(i);\r\n        if (this.s < 0) intp = '-' + intp;\r\n      }\r\n    }\r\n\r\n    if (fracp) {\r\n      fgsep = fmt.fractionGroupSeparator;\r\n      if (fgsep == u) {\r\n        fgsep = tfmt.fractionGroupSeparator;\r\n        if (fgsep == u) fgsep = cfmt.fractionGroupSeparator;\r\n      }\r\n\r\n      if (fgsep) {\r\n        fgsize = fmt.fractionGroupSize;\r\n        if (fgsize == u) {\r\n          fgsize = tfmt.fractionGroupSize;\r\n          if (fgsize == u) {\r\n            fgsize = cfmt.fractionGroupSize;\r\n            if (fgsize == u) fgsize = 0;\r\n          }\r\n        }\r\n\r\n        fgsize = +fgsize;\r\n\r\n        if (fgsize) {\r\n          fracp = fracp.replace(new RegExp('\\\\d{' + fgsize + '}\\\\B', 'g'), '$&' + fgsep);\r\n        }\r\n      }\r\n\r\n      return intp + dsep + fracp;\r\n    } else {\r\n\r\n      return intp;\r\n    }\r\n  };\r\n\r\n  Ctor.format = {\r\n    decimalSeparator: '.',\r\n    groupSeparator: ',',\r\n    groupSize: 3,\r\n    secondaryGroupSize: 0,\r\n    fractionGroupSeparator: '',\r\n    fractionGroupSize: 0\r\n  };\r\n\r\n  return Ctor;\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports) module.exports = toFormat;\r\n","import JSBI from 'jsbi';\nimport invariant from 'tiny-invariant';\nimport _Decimal from 'decimal.js-light';\nimport _Big from 'big.js';\nimport toFormat from 'toformat';\nimport { getAddress } from '@ethersproject/address';\n\nvar TradeType;\n\n(function (TradeType) {\n  TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n})(TradeType || (TradeType = {}));\n\nvar Rounding;\n\n(function (Rounding) {\n  Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n})(Rounding || (Rounding = {}));\n\nvar MaxUint256 = /*#__PURE__*/JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar _toSignificantRoundin, _toFixedRounding;\nvar Decimal = /*#__PURE__*/toFormat(_Decimal);\nvar Big = /*#__PURE__*/toFormat(_Big);\nvar toSignificantRounding = (_toSignificantRoundin = {}, _toSignificantRoundin[Rounding.ROUND_DOWN] = Decimal.ROUND_DOWN, _toSignificantRoundin[Rounding.ROUND_HALF_UP] = Decimal.ROUND_HALF_UP, _toSignificantRoundin[Rounding.ROUND_UP] = Decimal.ROUND_UP, _toSignificantRoundin);\nvar toFixedRounding = (_toFixedRounding = {}, _toFixedRounding[Rounding.ROUND_DOWN] = 0, _toFixedRounding[Rounding.ROUND_HALF_UP] = 1, _toFixedRounding[Rounding.ROUND_UP] = 3, _toFixedRounding);\nvar Fraction = /*#__PURE__*/function () {\n  function Fraction(numerator, denominator) {\n    if (denominator === void 0) {\n      denominator = JSBI.BigInt(1);\n    }\n\n    this.numerator = JSBI.BigInt(numerator);\n    this.denominator = JSBI.BigInt(denominator);\n  }\n\n  Fraction.tryParseFraction = function tryParseFraction(fractionish) {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string') return new Fraction(fractionish);\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish;\n    throw new Error('Could not parse fraction');\n  } // performs floor division\n  ;\n\n  var _proto = Fraction.prototype;\n\n  _proto.invert = function invert() {\n    return new Fraction(this.denominator, this.numerator);\n  };\n\n  _proto.add = function add(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(JSBI.add(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.subtract = function subtract(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.lessThan = function lessThan(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return JSBI.lessThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.equalTo = function equalTo(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return JSBI.equal(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.greaterThan = function greaterThan(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return JSBI.greaterThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.multiply = function multiply(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(JSBI.multiply(this.numerator, otherParsed.numerator), JSBI.multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.divide = function divide(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(this.denominator, otherParsed.numerator));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(significantDigits) ? process.env.NODE_ENV !== \"production\" ? invariant(false, significantDigits + \" is not an integer.\") : invariant(false) : void 0;\n    !(significantDigits > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, significantDigits + \" is not positive.\") : invariant(false) : void 0;\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    });\n    var quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(decimalPlaces) ? process.env.NODE_ENV !== \"production\" ? invariant(false, decimalPlaces + \" is not an integer.\") : invariant(false) : void 0;\n    !(decimalPlaces >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, decimalPlaces + \" is negative.\") : invariant(false) : void 0;\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n  /**\r\n   * Helper method for converting any super class back to a fraction\r\n   */\n  ;\n\n  _createClass(Fraction, [{\n    key: \"quotient\",\n    get: function get() {\n      return JSBI.divide(this.numerator, this.denominator);\n    } // remainder after floor division\n\n  }, {\n    key: \"remainder\",\n    get: function get() {\n      return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator);\n    }\n  }, {\n    key: \"asFraction\",\n    get: function get() {\n      return new Fraction(this.numerator, this.denominator);\n    }\n  }]);\n\n  return Fraction;\n}();\n\nvar Big$1 = /*#__PURE__*/toFormat(_Big);\nvar CurrencyAmount = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(CurrencyAmount, _Fraction);\n\n  function CurrencyAmount(currency, numerator, denominator) {\n    var _this;\n\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    !JSBI.lessThanOrEqual(_this.quotient, MaxUint256) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'AMOUNT') : invariant(false) : void 0;\n    _this.currency = currency;\n    _this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals));\n    return _this;\n  }\n  /**\r\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\r\n   * @param currency the currency in the amount\r\n   * @param rawAmount the raw token or ether amount\r\n   */\n\n\n  CurrencyAmount.fromRawAmount = function fromRawAmount(currency, rawAmount) {\n    return new CurrencyAmount(currency, rawAmount);\n  }\n  /**\r\n   * Construct a currency amount with a denominator that is not equal to 1\r\n   * @param currency the currency\r\n   * @param numerator the numerator of the fractional token amount\r\n   * @param denominator the denominator of the fractional token amount\r\n   */\n  ;\n\n  CurrencyAmount.fromFractionalAmount = function fromFractionalAmount(currency, numerator, denominator) {\n    return new CurrencyAmount(currency, numerator, denominator);\n  };\n\n  var _proto = CurrencyAmount.prototype;\n\n  _proto.add = function add(other) {\n    !this.currency.equals(other.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CURRENCY') : invariant(false) : void 0;\n\n    var added = _Fraction.prototype.add.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator);\n  };\n\n  _proto.subtract = function subtract(other) {\n    !this.currency.equals(other.currency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CURRENCY') : invariant(false) : void 0;\n\n    var subtracted = _Fraction.prototype.subtract.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator);\n  };\n\n  _proto.multiply = function multiply(other) {\n    var multiplied = _Fraction.prototype.multiply.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator);\n  };\n\n  _proto.divide = function divide(other) {\n    var divided = _Fraction.prototype.divide.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator);\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    return _Fraction.prototype.divide.call(this, this.decimalScale).toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = this.currency.decimals;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    !(decimalPlaces <= this.currency.decimals) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DECIMALS') : invariant(false) : void 0;\n    return _Fraction.prototype.divide.call(this, this.decimalScale).toFixed(decimalPlaces, format, rounding);\n  };\n\n  _proto.toExact = function toExact(format) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    Big$1.DP = this.currency.decimals;\n    return new Big$1(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format);\n  };\n\n  _createClass(CurrencyAmount, [{\n    key: \"wrapped\",\n    get: function get() {\n      if (this.currency.isToken) return this;\n      return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator);\n    }\n  }]);\n\n  return CurrencyAmount;\n}(Fraction);\n\nvar ONE_HUNDRED = /*#__PURE__*/new Fraction( /*#__PURE__*/JSBI.BigInt(100));\n/**\r\n * Converts a fraction to a percent\r\n * @param fraction the fraction to convert\r\n */\n\nfunction toPercent(fraction) {\n  return new Percent(fraction.numerator, fraction.denominator);\n}\n\nvar Percent = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Percent, _Fraction);\n\n  function Percent() {\n    var _this;\n\n    _this = _Fraction.apply(this, arguments) || this;\n    /**\r\n     * This boolean prevents a fraction from being interpreted as a Percent\r\n     */\n\n    _this.isPercent = true;\n    return _this;\n  }\n\n  var _proto = Percent.prototype;\n\n  _proto.add = function add(other) {\n    return toPercent(_Fraction.prototype.add.call(this, other));\n  };\n\n  _proto.subtract = function subtract(other) {\n    return toPercent(_Fraction.prototype.subtract.call(this, other));\n  };\n\n  _proto.multiply = function multiply(other) {\n    return toPercent(_Fraction.prototype.multiply.call(this, other));\n  };\n\n  _proto.divide = function divide(other) {\n    return toPercent(_Fraction.prototype.divide.call(this, other));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 5;\n    }\n\n    return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 2;\n    }\n\n    return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n  };\n\n  return Percent;\n}(Fraction);\n\nvar Price = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Price, _Fraction);\n\n  /**\r\n   * Construct a price, either with the base and quote currency amount, or the\r\n   * @param args\r\n   */\n  function Price() {\n    var _this;\n\n    var baseCurrency, quoteCurrency, denominator, numerator;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 4) {\n      baseCurrency = args[0];\n      quoteCurrency = args[1];\n      denominator = args[2];\n      numerator = args[3];\n    } else {\n      var result = args[0].quoteAmount.divide(args[0].baseAmount);\n      var _ref = [args[0].baseAmount.currency, args[0].quoteAmount.currency, result.denominator, result.numerator];\n      baseCurrency = _ref[0];\n      quoteCurrency = _ref[1];\n      denominator = _ref[2];\n      numerator = _ref[3];\n    }\n\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    _this.baseCurrency = baseCurrency;\n    _this.quoteCurrency = quoteCurrency;\n    _this.scalar = new Fraction(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals)));\n    return _this;\n  }\n  /**\r\n   * Flip the price, switching the base and quote currency\r\n   */\n\n\n  var _proto = Price.prototype;\n\n  _proto.invert = function invert() {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  }\n  /**\r\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\r\n   * @param other the other price\r\n   */\n  ;\n\n  _proto.multiply = function multiply(other) {\n    !this.quoteCurrency.equals(other.baseCurrency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    var fraction = _Fraction.prototype.multiply.call(this, other);\n\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n  }\n  /**\r\n   * Return the amount of quote currency corresponding to a given amount of the base currency\r\n   * @param currencyAmount the amount of base currency to quote against the price\r\n   */\n  ;\n\n  _proto.quote = function quote(currencyAmount) {\n    !currencyAmount.currency.equals(this.baseCurrency) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'TOKEN') : invariant(false) : void 0;\n\n    var result = _Fraction.prototype.multiply.call(this, currencyAmount);\n\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator);\n  }\n  /**\r\n   * Get the value scaled by decimals for formatting\r\n   * @private\r\n   */\n  ;\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 4;\n    }\n\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);\n  };\n\n  _createClass(Price, [{\n    key: \"adjustedForDecimals\",\n    get: function get() {\n      return _Fraction.prototype.multiply.call(this, this.scalar);\n    }\n  }]);\n\n  return Price;\n}(Fraction);\n\n/**\r\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\r\n */\n\nvar BaseCurrency =\n/**\r\n * Constructs an instance of the base class `BaseCurrency`.\r\n * @param chainId the chain ID on which this currency resides\r\n * @param decimals decimals of the currency\r\n * @param symbol symbol of the currency\r\n * @param name of the currency\r\n */\nfunction BaseCurrency(chainId, decimals, symbol, name) {\n  !Number.isSafeInteger(chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_ID') : invariant(false) : void 0;\n  !(decimals >= 0 && decimals < 255 && Number.isInteger(decimals)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DECIMALS') : invariant(false) : void 0;\n  this.chainId = chainId;\n  this.decimals = decimals;\n  this.symbol = symbol;\n  this.name = name;\n};\n\n/**\r\n * Represents the native currency of the chain on which it resides, e.g.\r\n */\n\nvar NativeCurrency = /*#__PURE__*/function (_BaseCurrency) {\n  _inheritsLoose(NativeCurrency, _BaseCurrency);\n\n  function NativeCurrency() {\n    var _this;\n\n    _this = _BaseCurrency.apply(this, arguments) || this;\n    _this.isNative = true;\n    _this.isToken = false;\n    return _this;\n  }\n\n  return NativeCurrency;\n}(BaseCurrency);\n\n/**\r\n * Validates an address and returns the parsed (checksummed) version of that address\r\n * @param address the unchecksummed hex address\r\n */\n\nfunction validateAndParseAddress(address) {\n  try {\n    return getAddress(address);\n  } catch (error) {\n    throw new Error(address + \" is not a valid address.\");\n  }\n}\n\n/**\r\n * Represents an ERC20 token with a unique address and some metadata.\r\n */\n\nvar Token = /*#__PURE__*/function (_BaseCurrency) {\n  _inheritsLoose(Token, _BaseCurrency);\n\n  function Token(chainId, address, decimals, symbol, name) {\n    var _this;\n\n    _this = _BaseCurrency.call(this, chainId, decimals, symbol, name) || this;\n    _this.isNative = false;\n    _this.isToken = true;\n    _this.address = validateAndParseAddress(address);\n    return _this;\n  }\n  /**\r\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n   * @param other other token to compare\r\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.equals = function equals(other) {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address;\n  }\n  /**\r\n   * Returns true if the address of this token sorts before the address of the other token\r\n   * @param other other token to compare\r\n   * @throws if the tokens have the same address\r\n   * @throws if the tokens are on different chains\r\n   */\n  ;\n\n  _proto.sortsBefore = function sortsBefore(other) {\n    !(this.chainId === other.chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'CHAIN_IDS') : invariant(false) : void 0;\n    !(this.address !== other.address) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ADDRESSES') : invariant(false) : void 0;\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  }\n  /**\r\n   * Return this token, which does not need to be wrapped\r\n   */\n  ;\n\n  _createClass(Token, [{\n    key: \"wrapped\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return Token;\n}(BaseCurrency);\n\nvar _WETH;\n/**\r\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\r\n */\n\nvar WETH9 = (_WETH = {}, _WETH[1] = /*#__PURE__*/new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'), _WETH[3] = /*#__PURE__*/new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'), _WETH[4] = /*#__PURE__*/new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'), _WETH[5] = /*#__PURE__*/new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'), _WETH[42] = /*#__PURE__*/new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'), _WETH[10] = /*#__PURE__*/new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'), _WETH[69] = /*#__PURE__*/new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'), _WETH[42161] = /*#__PURE__*/new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'), _WETH[421611] = /*#__PURE__*/new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'), _WETH);\n\n/**\r\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\r\n */\n\nvar Ether = /*#__PURE__*/function (_NativeCurrency) {\n  _inheritsLoose(Ether, _NativeCurrency);\n\n  function Ether(chainId) {\n    return _NativeCurrency.call(this, chainId, 18, 'ETH', 'Ether') || this;\n  }\n\n  Ether.onChain = function onChain(chainId) {\n    var _this$_etherCache$cha;\n\n    return (_this$_etherCache$cha = this._etherCache[chainId]) != null ? _this$_etherCache$cha : this._etherCache[chainId] = new Ether(chainId);\n  };\n\n  var _proto = Ether.prototype;\n\n  _proto.equals = function equals(other) {\n    return other.isNative && other.chainId === this.chainId;\n  };\n\n  _createClass(Ether, [{\n    key: \"wrapped\",\n    get: function get() {\n      var weth9 = WETH9[this.chainId];\n      !!!weth9 ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'WRAPPED') : invariant(false) : void 0;\n      return weth9;\n    }\n  }]);\n\n  return Ether;\n}(NativeCurrency);\nEther._etherCache = {};\n\n/**\r\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\r\n * @param midPrice mid price before the trade\r\n * @param inputAmount the input amount of the trade\r\n * @param outputAmount the output amount of the trade\r\n */\n\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  var quotedOutputAmount = midPrice.quote(inputAmount); // calculate price impact := (exactQuote - outputAmount) / exactQuote\n\n  var priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);\n  return new Percent(priceImpact.numerator, priceImpact.denominator);\n}\n\n// `maxSize` by removing the last item\n\nfunction sortedInsert(items, add, maxSize, comparator) {\n  !(maxSize > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MAX_SIZE_ZERO') : invariant(false) : void 0; // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n\n  !(items.length <= maxSize) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ITEMS_SIZE') : invariant(false) : void 0; // short circuit first item add\n\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    var isFull = items.length === maxSize; // short circuit if full and the additional item does not come before the last item\n\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n\n    var lo = 0,\n        hi = items.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\n\nvar MAX_SAFE_INTEGER = /*#__PURE__*/JSBI.BigInt(Number.MAX_SAFE_INTEGER);\nvar ZERO = /*#__PURE__*/JSBI.BigInt(0);\nvar ONE = /*#__PURE__*/JSBI.BigInt(1);\nvar TWO = /*#__PURE__*/JSBI.BigInt(2);\n/**\r\n * Computes floor(sqrt(value))\r\n * @param value the value for which to compute the square root, rounded down\r\n */\n\nfunction sqrt(value) {\n  !JSBI.greaterThanOrEqual(value, ZERO) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'NEGATIVE') : invariant(false) : void 0; // rely on built in sqrt if possible\n\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))));\n  }\n\n  var z;\n  var x;\n  z = value;\n  x = JSBI.add(JSBI.divide(value, TWO), ONE);\n\n  while (JSBI.lessThan(x, z)) {\n    z = x;\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO);\n  }\n\n  return z;\n}\n\nexport { CurrencyAmount, Ether, Fraction, MaxUint256, NativeCurrency, Percent, Price, Rounding, Token, TradeType, WETH9, computePriceImpact, sortedInsert, sqrt, validateAndParseAddress };\n//# sourceMappingURL=sdk-core.esm.js.map\n","import JSBI from 'jsbi'\r\n\r\n// constants used internally but not expected to be used externally\r\nexport const NEGATIVE_ONE = JSBI.BigInt(-1)\r\nexport const ZERO = JSBI.BigInt(0)\r\nexport const ONE = JSBI.BigInt(1)\r\n\r\n// used in liquidity amount math\r\nexport const Q96 = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(96))\r\nexport const Q192 = JSBI.exponentiate(Q96, JSBI.BigInt(2))\r\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { MaxUint256 } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\nimport { ZERO } from '../internalConstants'\r\n\r\nconst TWO = JSBI.BigInt(2)\r\nconst POWERS_OF_2 = [128, 64, 32, 16, 8, 4, 2, 1].map((pow: number): [number, JSBI] => [\r\n  pow,\r\n  JSBI.exponentiate(TWO, JSBI.BigInt(pow))\r\n])\r\n\r\nexport function mostSignificantBit (x: JSBI): number {\r\n  invariant(JSBI.greaterThan(x, ZERO), 'ZERO')\r\n  invariant(JSBI.lessThanOrEqual(x, MaxUint256), 'MAX')\r\n\r\n  let msb: number = 0\r\n  for (const [power, min] of POWERS_OF_2) {\r\n    if (JSBI.greaterThanOrEqual(x, min)) {\r\n      x = JSBI.signedRightShift(x, JSBI.BigInt(power))\r\n      msb += power\r\n    }\r\n  }\r\n  return msb\r\n}\r\n","import { MaxUint256 } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\nimport { ONE, ZERO } from '../internalConstants'\r\nimport { mostSignificantBit } from './mostSignificantBit'\r\n\r\nfunction mulShift (val: JSBI, mulBy: string): JSBI {\r\n  return JSBI.signedRightShift(JSBI.multiply(val, JSBI.BigInt(mulBy)), JSBI.BigInt(128))\r\n}\r\n\r\nconst Q32 = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(32))\r\n\r\nexport abstract class TickMath {\r\n  /**\r\n   * Cannot be constructed.\r\n   */\r\n  // eslint-disable-next-line no-useless-constructor\r\n  private constructor () {}\r\n\r\n  /**\r\n   * The minimum tick that can be used on any pool.\r\n   */\r\n  public static MIN_TICK: number = -887272\r\n  /**\r\n   * The maximum tick that can be used on any pool.\r\n   */\r\n  public static MAX_TICK: number = -TickMath.MIN_TICK\r\n\r\n  /**\r\n   * The sqrt ratio corresponding to the minimum tick that could be used on any pool.\r\n   */\r\n  public static MIN_SQRT_RATIO: JSBI = JSBI.BigInt('4295128739')\r\n  /**\r\n   * The sqrt ratio corresponding to the maximum tick that could be used on any pool.\r\n   */\r\n  public static MAX_SQRT_RATIO: JSBI = JSBI.BigInt('1461446703485210103287273052203988822378723970342')\r\n\r\n  /**\r\n   * Returns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tick\r\n   * @param tick the tick for which to compute the sqrt ratio\r\n   */\r\n  public static getSqrtRatioAtTick (tick: number): JSBI {\r\n    invariant(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK && Number.isInteger(tick), 'TICK')\r\n    const absTick: number = tick < 0 ? tick * -1 : tick\r\n\r\n    let ratio: JSBI =\r\n      (absTick & 0x1) !== 0\r\n        ? JSBI.BigInt('0xfffcb933bd6fad37aa2d162d1a594001')\r\n        : JSBI.BigInt('0x100000000000000000000000000000000')\r\n    if ((absTick & 0x2) !== 0) ratio = mulShift(ratio, '0xfff97272373d413259a46990580e213a')\r\n    if ((absTick & 0x4) !== 0) ratio = mulShift(ratio, '0xfff2e50f5f656932ef12357cf3c7fdcc')\r\n    if ((absTick & 0x8) !== 0) ratio = mulShift(ratio, '0xffe5caca7e10e4e61c3624eaa0941cd0')\r\n    if ((absTick & 0x10) !== 0) ratio = mulShift(ratio, '0xffcb9843d60f6159c9db58835c926644')\r\n    if ((absTick & 0x20) !== 0) ratio = mulShift(ratio, '0xff973b41fa98c081472e6896dfb254c0')\r\n    if ((absTick & 0x40) !== 0) ratio = mulShift(ratio, '0xff2ea16466c96a3843ec78b326b52861')\r\n    if ((absTick & 0x80) !== 0) ratio = mulShift(ratio, '0xfe5dee046a99a2a811c461f1969c3053')\r\n    if ((absTick & 0x100) !== 0) ratio = mulShift(ratio, '0xfcbe86c7900a88aedcffc83b479aa3a4')\r\n    if ((absTick & 0x200) !== 0) ratio = mulShift(ratio, '0xf987a7253ac413176f2b074cf7815e54')\r\n    if ((absTick & 0x400) !== 0) ratio = mulShift(ratio, '0xf3392b0822b70005940c7a398e4b70f3')\r\n    if ((absTick & 0x800) !== 0) ratio = mulShift(ratio, '0xe7159475a2c29b7443b29c7fa6e889d9')\r\n    if ((absTick & 0x1000) !== 0) ratio = mulShift(ratio, '0xd097f3bdfd2022b8845ad8f792aa5825')\r\n    if ((absTick & 0x2000) !== 0) ratio = mulShift(ratio, '0xa9f746462d870fdf8a65dc1f90e061e5')\r\n    if ((absTick & 0x4000) !== 0) ratio = mulShift(ratio, '0x70d869a156d2a1b890bb3df62baf32f7')\r\n    if ((absTick & 0x8000) !== 0) ratio = mulShift(ratio, '0x31be135f97d08fd981231505542fcfa6')\r\n    if ((absTick & 0x10000) !== 0) ratio = mulShift(ratio, '0x9aa508b5b7a84e1c677de54f3e99bc9')\r\n    if ((absTick & 0x20000) !== 0) ratio = mulShift(ratio, '0x5d6af8dedb81196699c329225ee604')\r\n    if ((absTick & 0x40000) !== 0) ratio = mulShift(ratio, '0x2216e584f5fa1ea926041bedfe98')\r\n    if ((absTick & 0x80000) !== 0) ratio = mulShift(ratio, '0x48a170391f7dc42444e8fa2')\r\n\r\n    if (tick > 0) ratio = JSBI.divide(MaxUint256, ratio)\r\n\r\n    // back to Q96\r\n    return JSBI.greaterThan(JSBI.remainder(ratio, Q32), ZERO)\r\n      ? JSBI.add(JSBI.divide(ratio, Q32), ONE)\r\n      : JSBI.divide(ratio, Q32)\r\n  }\r\n\r\n  /**\r\n   * Returns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96\r\n   * and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96\r\n   * @param sqrtRatioX96 the sqrt ratio as a Q64.96 for which to compute the tick\r\n   */\r\n  public static getTickAtSqrtRatio (sqrtRatioX96: JSBI): number {\r\n    invariant(\r\n      JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\r\n        JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO),\r\n      'SQRT_RATIO'\r\n    )\r\n\r\n    const sqrtRatioX128 = JSBI.leftShift(sqrtRatioX96, JSBI.BigInt(32))\r\n\r\n    const msb = mostSignificantBit(sqrtRatioX128)\r\n\r\n    let r: JSBI\r\n    if (JSBI.greaterThanOrEqual(JSBI.BigInt(msb), JSBI.BigInt(128))) {\r\n      r = JSBI.signedRightShift(sqrtRatioX128, JSBI.BigInt(msb - 127))\r\n    } else {\r\n      r = JSBI.leftShift(sqrtRatioX128, JSBI.BigInt(127 - msb))\r\n    }\r\n\r\n    // eslint-disable-next-line camelcase\r\n    let log_2: JSBI = JSBI.leftShift(JSBI.subtract(JSBI.BigInt(msb), JSBI.BigInt(128)), JSBI.BigInt(64))\r\n\r\n    for (let i = 0; i < 14; i++) {\r\n      r = JSBI.signedRightShift(JSBI.multiply(r, r), JSBI.BigInt(127))\r\n      const f = JSBI.signedRightShift(r, JSBI.BigInt(128))\r\n      // eslint-disable-next-line camelcase\r\n      log_2 = JSBI.bitwiseOr(log_2, JSBI.leftShift(f, JSBI.BigInt(63 - i)))\r\n      r = JSBI.signedRightShift(r, f)\r\n    }\r\n\r\n    // eslint-disable-next-line camelcase\r\n    const log_sqrt10001 = JSBI.multiply(log_2, JSBI.BigInt('255738958999603826347141'))\r\n\r\n    const tickLow = JSBI.toNumber(\r\n      JSBI.signedRightShift(\r\n        JSBI.subtract(log_sqrt10001, JSBI.BigInt('3402992956809132418596140100660247210')),\r\n        JSBI.BigInt(128)\r\n      )\r\n    )\r\n    const tickHigh = JSBI.toNumber(\r\n      JSBI.signedRightShift(\r\n        JSBI.add(log_sqrt10001, JSBI.BigInt('291339464771989622907027621153398088495')),\r\n        JSBI.BigInt(128)\r\n      )\r\n    )\r\n\r\n    return tickLow === tickHigh\r\n      ? tickLow\r\n      : JSBI.lessThanOrEqual(TickMath.getSqrtRatioAtTick(tickHigh), sqrtRatioX96)\r\n        ? tickHigh\r\n        : tickLow\r\n  }\r\n}\r\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","require('./_wks-define')('asyncIterator');\n","/*\r\n *  big.js v5.2.2\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  https://github.com/MikeMcl/big.js/LICENCE\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,          // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big.\r\n     * (This limit is not enforced or checked.)\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   *\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        parse(x, n);\r\n      }\r\n\r\n      /*\r\n       * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\r\n       * points to Object.\r\n       */\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.version = '5.2.2';\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    // Minus zero?\r\n    if (n === 0 && 1 / n < 0) n = '-0';\r\n    else if (!NUMERIC.test(n += '')) throw Error(INVALID + 'number');\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n   * Called by stringify, P.div, P.round and P.sqrt.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * dp {number} Integer, 0 to MAX_DP inclusive.\r\n   * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, dp, rm, more) {\r\n    var xc = x.c,\r\n      i = x.e + dp + 1;\r\n\r\n    if (i < xc.length) {\r\n      if (rm === 1) {\r\n\r\n        // xc[i] is the digit after the digit that may be rounded up.\r\n        more = xc[i] >= 5;\r\n      } else if (rm === 2) {\r\n        more = xc[i] > 5 || xc[i] == 5 &&\r\n          (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\r\n      } else if (rm === 3) {\r\n        more = more || !!xc[0];\r\n      } else {\r\n        more = false;\r\n        if (rm !== 0) throw Error(INVALID_RM);\r\n      }\r\n\r\n      if (i < 1) {\r\n        xc.length = 1;\r\n\r\n        if (more) {\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          x.e = -dp;\r\n          xc[0] = 1;\r\n        } else {\r\n\r\n          // Zero.\r\n          xc[0] = x.e = 0;\r\n        }\r\n      } else {\r\n\r\n        // Remove any digits after the required decimal places.\r\n        xc.length = i--;\r\n\r\n        // Round up?\r\n        if (more) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up.\r\n          for (; ++xc[i] > 9;) {\r\n            xc[i] = 0;\r\n            if (!i--) {\r\n              ++x.e;\r\n              xc.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; !xc[--i];) xc.pop();\r\n      }\r\n    } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   *\r\n   * x {Big}\r\n   * id? {number} Caller id.\r\n   *         1 toExponential\r\n   *         2 toFixed\r\n   *         3 toPrecision\r\n   *         4 valueOf\r\n   * n? {number|undefined} Caller's argument.\r\n   * k? {number|undefined}\r\n   */\r\n  function stringify(x, id, n, k) {\r\n    var e, s,\r\n      Big = x.constructor,\r\n      z = !x.c[0];\r\n\r\n    if (n !== UNDEFINED) {\r\n      if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\r\n        throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\r\n      }\r\n\r\n      x = new Big(x);\r\n\r\n      // The index of the digit that may be rounded up.\r\n      n = k - x.e;\r\n\r\n      // Round?\r\n      if (x.c.length > ++k) round(x, n, Big.RM);\r\n\r\n      // toFixed: recalculate k as x.e may have changed if value rounded up.\r\n      if (id == 2) k = x.e + n + 1;\r\n\r\n      // Append zeros?\r\n      for (; x.c.length < k;) x.c.push(0);\r\n    }\r\n\r\n    e = x.e;\r\n    s = x.c.join('');\r\n    n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) for (e -= n; e--;) s += '0';\r\n      else if (e < n) s = s.slice(0, e) + '.' + s.slice(e);\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n  */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) return new Big(k * 0);\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      d = dp + (q.e = x.e - y.e) + 1;    // number of digits of the result\r\n\r\n    q.s = k;\r\n    k = d < 0 ? 0 : d;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > d) round(q, dp, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n\r\n      // y is non-zero? x is non-zero? Or both are zero.\r\n      return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\r\n    if (!xc[0] || !yc[0]) return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    a = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (b = 0; a; xc[a] %= 10) b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (b) {\r\n      xc.unshift(b);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (a = xc.length; xc[--a] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor(1),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + 'exponent');\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded using rounding mode rm\r\n   * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\r\n   * multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   * If rm is not specified, use Big.RM.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n   */\r\n  P.round = function (dp, rm) {\r\n    var Big = this.constructor;\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);\r\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big(0.5);\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) throw Error(NAME + 'No square root');\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s);\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, Big.DP -= 4, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) return new Big(y.s * 0);\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = (c[j] + b) % 10;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   */\r\n  P.toExponential = function (dp) {\r\n    return stringify(this, 1, dp, dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp) {\r\n    return stringify(this, 2, dp, this.e + dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Integer, 1 to MAX_DP inclusive.\r\n   */\r\n  P.toPrecision = function (sd) {\r\n    return stringify(this, 3, sd, sd - 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toString = function () {\r\n    return stringify(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return stringify(this, 4);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","(function(i,_){\"object\"==typeof exports&&\"undefined\"!=typeof module?_(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],_):(i=i||self,_(i.JSBI={}))})(this,function(i){'use strict';var _=Math.clz32,t=Math.abs,e=Math.max,g=Math.floor;class o extends Array{constructor(i,_){if(super(i),this.sign=_,i>o.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Number.isFinite;if(\"number\"==typeof i){if(0===i)return o.__zero();if(o.__isOneDigitInt(i))return 0>i?o.__oneDigit(-i,!0):o.__oneDigit(i,!1);if(!_(i)||g(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return o.__fromDouble(i)}if(\"string\"==typeof i){const _=o.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?o.__oneDigit(1,!1):o.__zero();if(\"object\"==typeof i){if(i.constructor===o)return i;const _=o.__toPrimitive(i);return o.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?o.__toStringBasePowerOfTwo(this,i):o.__toStringGeneric(this,i,!1)}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=o.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,s=t,l=_-1;const r=e+3;let a=32===r?0:s<<r;a>>>=12;const u=r-12;let d=12<=r?0:s<<20+r,h=20+r;for(0<u&&0<l&&(l--,s=i.__digit(l),a|=s>>>30-u,d=s<<u+2,h=u+2);0<h&&0<l;)l--,s=i.__digit(l),d|=30<=h?s<<h-30:s>>>30-h,h-=30;const m=o.__decideRounding(i,h,l,s);if((1===m||0===m&&1==(1&d))&&(d=d+1>>>0,0===d&&(a++,0!=a>>>20&&(a=0,g++,1023<g))))return i.sign?-Infinity:1/0;const b=i.sign?-2147483648:0;return g=g+1023<<20,o.__kBitConversionInts[1]=b|g|a,o.__kBitConversionInts[0]=d,o.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?o.__absoluteSubOne(i).__trim():o.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return o.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?o.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new o(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=o.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=o.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new o(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)o.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return o.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:o.unaryMinus(i);n=o.__absoluteDivSmall(i,e,null)}else n=o.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return o.__zero();const _=o.__absoluteModSmall(i,t);return 0===_?o.__zero():o.__oneDigit(_,i.sign)}const e=o.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?o.__absoluteAdd(i,_,t):0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t):o.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__rightShiftByAbsolute(i,_):o.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__leftShiftByAbsolute(i,_):o.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>o.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=o.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<o.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=o.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!o.equal(i,_)}static bitwiseAnd(i,_){if(!i.sign&&!_.sign)return o.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length)+1;let n=o.__absoluteSubOne(i,t);const g=o.__absoluteSubOne(_);return n=o.__absoluteOr(n,g,n),o.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),o.__absoluteAndNot(i,o.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){if(!i.sign&&!_.sign)return o.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length),n=o.__absoluteSubOne(i,t),g=o.__absoluteSubOne(_);return o.__absoluteXor(n,g,n).__trim()}const t=e(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteXor(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){const t=e(i.length,_.length);if(!i.sign&&!_.sign)return o.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let e=o.__absoluteSubOne(i,t);const n=o.__absoluteSubOne(_);return e=o.__absoluteAnd(e,n,e),o.__absoluteAddOne(e,!0,e).__trim()}i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteAndNot(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){if(0===t.length)return t;if(_=g(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return o.__zero();if(_>=o.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const s=t.__unsignedDigit(e-1),l=1<<(_-1)%30;if(t.length===e&&s<l)return t;if(!((s&l)===l))return o.__truncateToNBits(_,t);if(!t.sign)return o.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(s&l-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return o.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&s===l?t:o.__truncateToNBits(_,t)}return o.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){if(0===_.length)return _;if(i=g(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return o.__zero();if(_.sign){if(i>o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return o.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=o.__kMaxLengthBits)return _;const t=0|(i+29)/30;if(_.length<t)return _;const e=i%30;if(_.length==t){if(0===e)return _;const i=_.__digit(t-1);if(0==i>>>e)return _}return o.__truncateToNBits(i,_)}static ADD(i,_){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)&&o.__isBigInt(_))return o.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return o.__compare(i,_,0)}static LE(i,_){return o.__compare(i,_,1)}static GT(i,_){return o.__compare(i,_,2)}static GE(i,_){return o.__compare(i,_,3)}static EQ(i,_){for(;;){if(o.__isBigInt(i))return o.__isBigInt(_)?o.equal(i,_):o.EQ(_,i);if(\"number\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"string\"==typeof i){if(o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.equal(i,_);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(o.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==o)return i==_;i=o.__toPrimitive(i)}else return i==_}}static NE(i,_){return!o.EQ(i,_)}static __zero(){return new o(0,!1)}static __oneDigit(i,_){const t=new o(1,_);return t.__setDigit(0,i),t}__copy(){const _=new o(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){o.__kBitConversionDouble[0]=i;const _=2047&o.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new o(e,0>i);let g=1048575&o.__kBitConversionInts[1]|1048576,s=o.__kBitConversionInts[0];const l=20,r=t%30;let a,u=0;if(r<20){const i=l-r;u=i+32,a=g>>>i,g=g<<32-i|s>>>i,s<<=32-i}else if(r===20)u=32,a=g,g=s,s=0;else{const i=r-l;u=32-i,a=g<<i|s>>>32-i,g=s<<i,s=0}n.__setDigit(e-1,a);for(let _=e-2;0<=_;_--)0<u?(u-=30,a=g>>>2,g=g<<30|s>>>2,s<<=30):a=0,n.__setDigit(_,a);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return o.__zero();let g=i.charCodeAt(n);for(;o.__isWhitespace(g);){if(++n===e)return o.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return o.__zero();g=i.charCodeAt(n)}const s=e-n;let l=o.__kMaxBitsPerChar[_],r=o.__kBitsPerCharTableMultiplier-1;if(s>1073741824/l)return null;const a=l*s+r>>>o.__kBitsPerCharTableShift,u=new o(0|(a+29)/30,!1),h=10>_?_:10,b=10<_?_-10:0;if(0==(_&_-1)){l>>=o.__kBitsPerCharTableShift;const _=[],t=[];let s=!1;do{let o=0,r=0;for(;;){let _;if(g-48>>>0<h)_=g-48;else if((32|g)-97>>>0<b)_=(32|g)-87;else{s=!0;break}if(r+=l,o=o<<l|_,++n===e){s=!0;break}if(g=i.charCodeAt(n),30<r+l)break}_.push(o),t.push(r)}while(!s);o.__fillFromParts(u,_,t)}else{u.__initializeDigits();let t=!1,s=0;do{let a=0,D=1;for(;;){let o;if(g-48>>>0<h)o=g-48;else if((32|g)-97>>>0<b)o=(32|g)-87;else{t=!0;break}const l=D*_;if(1073741823<l)break;if(D=l,a=a*_+o,s++,++n===e){t=!0;break}g=i.charCodeAt(n)}r=30*o.__kBitsPerCharTableMultiplier-1;const c=0|(l*s+r>>>o.__kBitsPerCharTableShift)/30;u.__inplaceMultiplyAdd(D,a,c)}while(!t)}if(n!==e){if(!o.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!o.__isWhitespace(g))return null}return u.sign=-1==t,u.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,s=_.__digit(t-1),l=o.__clz30(s);let r=0|(30*t-l+n-1)/n;if(_.sign&&r++,268435456<r)throw new Error(\"string too long\");const a=Array(r);let u=r-1,d=0,h=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(d|i<<h)&g;a[u--]=o.__kConversionChars[t];const s=n-h;for(d=i>>>s,h=30-s;h>=n;)a[u--]=o.__kConversionChars[d&g],d>>>=n,h-=n}const m=(d|s<<h)&g;for(a[u--]=o.__kConversionChars[m],d=s>>>n-h;0!==d;)a[u--]=o.__kConversionChars[d&g],d>>>=n;if(_.sign&&(a[u--]=\"-\"),-1!=u)throw new Error(\"implementation bug\");return a.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-o.__clz30(_.__digit(e-1)),g=o.__kMaxBitsPerChar[i],s=g-1;let l=n*o.__kBitsPerCharTableMultiplier;l+=s-1,l=0|l/s;const r=l+1>>1,a=o.exponentiate(o.__oneDigit(i,!1),o.__oneDigit(r,!1));let u,d;const h=a.__unsignedDigit(0);if(1===a.length&&32767>=h){u=new o(_.length,!1),u.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);u.__setHalfDigit(e,0|i/h),t=0|i%h}d=t.toString(i)}else{const t=o.__absoluteDivLarge(_,a,!0,!0);u=t.quotient;const e=t.remainder.__trim();d=o.__toStringGeneric(e,i,!0)}u.__trim();let m=o.__toStringGeneric(u,i,!0);for(;d.length<r;)d=\"0\"+d;return!1===t&&_.sign&&(m=\"-\"+m),m+d}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return o.__unequalSign(t);const e=o.__absoluteCompare(i,_);return 0<e?o.__absoluteGreater(t):0>e?o.__absoluteLess(t):0}static __compareToNumber(i,_){if(o.__isOneDigitInt(_)){const e=i.sign,n=0>_;if(e!==n)return o.__unequalSign(e);if(0===i.length){if(n)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return o.__absoluteGreater(e);const g=t(_),s=i.__unsignedDigit(0);return s>g?o.__absoluteGreater(e):s<g?o.__absoluteLess(e):0}return o.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return o.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;o.__kBitConversionDouble[0]=_;const e=2047&o.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return o.__absoluteGreater(t);const g=i.length;let s=i.__digit(g-1);const l=o.__clz30(s),r=30*g-l,a=n+1;if(r<a)return o.__absoluteLess(t);if(r>a)return o.__absoluteGreater(t);let u=1048576|1048575&o.__kBitConversionInts[1],d=o.__kBitConversionInts[0];const h=20,m=29-l;if(m!==(0|(r-1)%30))throw new Error(\"implementation bug\");let b,D=0;if(20>m){const i=h-m;D=i+32,b=u>>>i,u=u<<32-i|d>>>i,d<<=32-i}else if(20===m)D=32,b=u,u=d;else{const i=m-h;D=32-i,b=u<<i|d>>>32-i,u=d<<i}if(s>>>=0,b>>>=0,s>b)return o.__absoluteGreater(t);if(s<b)return o.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<D?(D-=30,b=u>>>2,u=u<<30|d>>>2,d<<=30):b=0;const _=i.__unsignedDigit(e);if(_>b)return o.__absoluteGreater(t);if(_<b)return o.__absoluteLess(t)}if(0!==u||0!==d){if(0===D)throw new Error(\"implementation bug\");return o.__absoluteLess(t)}return 0}static __equalToNumber(i,_){return o.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===o.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(o.__isBigInt(i)&&\"string\"==typeof _)return _=o.__fromString(_),null!==_&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)){if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return o.__comparisonResultToBool(o.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return o.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return o.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new o(n,e);let s=0,l=0;for(;l<t.length;l++){const i=_.__digit(l)+t.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}for(;l<_.length;l++){const i=_.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}return l<g.length&&g.__setDigit(l,s),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);const n=new o(_.length,e);let g=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)-t.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new o(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new o(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=s;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&t.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let s=g;n<g&&(s=n);let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&~t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)|t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)^t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,s=t>>>15;let l=0,r=0;for(let a,u=0;u<_.length;u++,n++){a=e.__digit(n);const i=_.__digit(u),t=32767&i,d=i>>>15,h=o.__imul(t,g),m=o.__imul(t,s),b=o.__imul(d,g),D=o.__imul(d,s);a+=r+h+l,l=a>>>30,a&=1073741823,a+=((32767&m)<<15)+((32767&b)<<15),l+=a>>>30,r=D+(m>>>15)+(b>>>15),e.__setDigit(n,1073741823&a)}for(;0!=l||0!==r;n++){let i=e.__digit(n);i+=l+r,r=0,l=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,s){let l=e,a=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=o.__imul(32767&i,t),g=o.__imul(i>>>15,t),u=e+((32767&g)<<15)+a+l;l=u>>>30,a=g>>>15,s.__setDigit(n,1073741823&u)}if(s.length>g)for(s.__setDigit(g++,l+a);g<s.length;)s.__setDigit(g++,0);else if(0!==l+a)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,s=_;for(let l=0;l<t;l++){const i=this.__digit(l),_=32767&i,t=i>>>15,r=o.__imul(_,e),a=o.__imul(_,n),u=o.__imul(t,e),d=o.__imul(t,n);let h=s+r+g;g=h>>>30,h&=1073741823,h+=((32767&a)<<15)+((32767&u)<<15),g+=h>>>30,s=d+(a>>>15)+(u>>>15),this.__setDigit(l,1073741823&h)}if(0!=g||0!==s)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new o(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,s=i.__halfDigitLength()-g;let l=null;t&&(l=new o(s+2>>>1,!1),l.__initializeDigits());const r=new o(g+2>>>1,!1);r.__initializeDigits();const a=o.__clz15(_.__halfDigit(g-1));0<a&&(_=o.__specialLeftShift(_,a,0));const d=o.__specialLeftShift(i,a,1),u=_.__halfDigit(g-1);let h=0;for(let a,m=s;0<=m;m--){a=32767;const i=d.__halfDigit(m+g);if(i!==u){const t=(i<<15|d.__halfDigit(m+g-1))>>>0;a=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),s=d.__halfDigit(m+g-2);for(;o.__imul(a,n)>>>0>(e<<16|s)>>>0&&(a--,e+=u,!(32767<e)););}o.__internalMultiplyAdd(_,a,0,n,r);let e=d.__inplaceSub(r,m,g+1);0!==e&&(e=d.__inplaceAdd(_,m,g),d.__setHalfDigit(m+g,32767&d.__halfDigit(m+g)+e),a--),t&&(1&m?h=a<<15:l.__setDigit(m>>>1,h|a))}if(e)return d.__inplaceRightShift(a),t?{quotient:l,remainder:d}:d;if(t)return l;throw new Error(\"unreachable\")}static __clz15(i){return o.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new o(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let s=0;for(let o=0;o<g;o++){const i=_.__digit(o);n.__setDigit(o,1073741823&i<<t|s),s=i>>>30-t}return 0<e&&n.__setDigit(g,s),n}static __leftShiftByAbsolute(_,i){const t=o.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,s=0!==n&&0!=_.__digit(g-1)>>>30-n,l=g+e+(s?1:0),r=new o(l,_.sign);if(0===n){let t=0;for(;t<e;t++)r.__setDigit(t,0);for(;t<l;t++)r.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)r.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);r.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(s)r.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return r.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=o.__toShiftAmount(i);if(0>n)return o.__rightShiftByMaximum(e);const g=0|n/30,s=n%30;let l=t-g;if(0>=l)return o.__rightShiftByMaximum(e);let r=!1;if(e){if(0!=(_.__digit(g)&(1<<s)-1))r=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){r=!0;break}}if(r&&0===s){const i=_.__digit(t-1);0==~i&&l++}let a=new o(l,e);if(0===s){a.__setDigit(l-1,0);for(let e=g;e<t;e++)a.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>s;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);a.__setDigit(t,1073741823&i<<30-s|e),e=i>>>s}a.__setDigit(n,e)}return r&&(a=o.__absoluteAddOne(a,!0,a)),a.__trim()}static __rightShiftByMaximum(i){return i?o.__oneDigit(1,!0):o.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>o.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===o)return i;const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}const e=i.valueOf;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}const n=i.toString;if(n){const _=n.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return o.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===o}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new o(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,s=new o(g,e);let l=0;const r=g-1;let a=0;for(const i=n(r,t.length);l<i;l++){const i=0-t.__digit(l)-a;a=1&i>>>30,s.__setDigit(l,1073741823&i)}for(;l<r;l++)s.__setDigit(l,0|1073741823&-a);let u=r<t.length?t.__digit(r):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return s.__setDigit(r,h),s.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}o.__kMaxLength=33554432,o.__kMaxLengthBits=o.__kMaxLength<<5,o.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],o.__kBitsPerCharTableShift=5,o.__kBitsPerCharTableMultiplier=1<<o.__kBitsPerCharTableShift,o.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],o.__kBitConversionBuffer=new ArrayBuffer(8),o.__kBitConversionDouble=new Float64Array(o.__kBitConversionBuffer),o.__kBitConversionInts=new Int32Array(o.__kBitConversionBuffer),o.__clz30=_?function(i){return _(i)-2}:function(i){return 0===i?30:0|29-(0|Math.log(i>>>0)/Math.LN2)},o.__imul=Math.imul||function(i,_){return 0|i*_},i.default=o,Object.defineProperty(i,\"__esModule\",{value:!0})});\n//# sourceMappingURL=jsbi-umd.js.map\n"],"sourceRoot":""}